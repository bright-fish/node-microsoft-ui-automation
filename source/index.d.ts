export interface CurrentBoundingRectangle {
  bottom: number;
  left: number;
  right: number;
  top: number;
}

export interface IUIAutomationElement {
  cachedProviderDescription: any;
  cachedProcessId: any;
  cachedOrientation: any;
  cachedNativeWindowHandle: any;
  cachedLocalizedControlType: any;
  cachedLabeledBy: any;
  cachedItemType: any;
  cachedItemStatus: any;
  cachedIsRequiredForForm: any;
  cachedIsPassword: any;
  cachedIsOffscreen: any;
  cachedIsKeyboardFocusable: any;
  cachedIsEnabled: any;
  cachedIsDataValidForForm: any;
  cachedIsControlElement: any;
  cachedIsContentElement: any;
  cachedHelpText: any;
  cachedHasKeyboardFocus: any;
  cachedFrameworkId: any;
  cachedFlowsTo: any;
  cachedDescribedBy: any;
  cachedCulture: any;
  cachedControlType: any;
  cachedControllerFor: any;
  cachedClassName: any;
  cachedBoundingRectangle: any;
  cachedAutomationId: any;
  cachedAriaRole: any;
  cachedAriaProperties: any;
  cachedAccessKey: any;
  cachedAcceleratorKey: any;
  cachedName: any;
  currentLabeledBy: any;
  currentProviderDescription: string;
  currentProcessId: number;
  currentOrientation: number;
  currentNativeWindowHandle: unknown[];
  currentLocalizedControlType: string;
  currentItemType: string;
  currentItemStatus: string;
  currentIsRequiredForForm: boolean;
  currentIsPassword: boolean;
  currentIsOffscreen: boolean;
  currentIsKeyboardFocusable: boolean;
  currentIsEnabled: boolean;
  currentIsDataValidForForm: boolean;
  currentIsControlElement: boolean;
  currentIsContentElement: boolean;
  currentHelpText: string;
  currentHasKeyboardFocus: boolean;
  currentFrameworkId: string;
  currentFlowsTo: unknown[];
  currentDescribedBy: unknown[];
  currentCulture: number;
  currentControlType: number;
  currentControllerFor: unknown[];
  currentClassName: string;
  currentBoundingRectangle: CurrentBoundingRectangle;
  currentAutomationId: string;
  currentAriaRole: string;
  currentAriaProperties: string;
  currentAccessKey: string;
  currentAcceleratorKey: string;
  currentName: string;

  findFirst(treeScope: any, propertyCondition: PropertyCondition): IUIAutomationElement;
}

export declare interface PropertyCondition {}

export declare interface IUIAutomationTreeWalker {
  getFirstChildElement(element: IUIAutomationElement): IUIAutomationElement;
}

export class TreeScope {
  static None: any;
  static Element: any;
  static Children: any;
  static Descendants: any;
  static Parent: any;
  static Ancestors: any;
  static Subtree: any;
}

export class PropertyIDs {
  static Name: any;
  static NativeWindowHandle: any;
  static NavigationLand: any;
  static RuntimeId: any;
  static BoundingRectangle: any;
  static ProcessId: any;
  static ControlType: any;
  static LocalizedControlType: any;
  static Name: any;
  static AcceleratorKey: any;
  static AccessKey: any;
  static HasKeyboardFocus: any;
  static IsKeyboardFocusable: any;
  static IsEnabled: any;
  static AutomationId: any;
  static ClassName: any;
  static HelpText: any;
  static ClickablePoint: any;
  static Culture: any;
  static IsControlElement: any;
  static IsContentElement: any;
  static LabeledBy: any;
  static IsPassword: any;
  static NativeWindowHandle: any;
  static ItemType: any;
  static IsOffscreen: any;
  static Orientation: any;
  static FrameworkId: any;
  static IsRequiredForForm: any;
  static ItemStatus: any;
  static IsDockPatternAvailable: any;
  static IsExpandCollapsePatternAvailable: any;
  static IsGridItemPatternAvailable: any;
  static IsGridPatternAvailable: any;
  static IsInvokePatternAvailable: any;
  static IsMultipleViewPatternAvailable: any;
  static IsRangeValuePatternAvailable: any;
  static IsScrollPatternAvailable: any;
  static IsScrollItemPatternAvailable: any;
  static IsSelectionItemPatternAvailable: any;
  static IsSelectionPatternAvailable: any;
  static IsTablePatternAvailable: any;
  static IsTableItemPatternAvailable: any;
  static IsTextPatternAvailable: any;
  static IsTogglePatternAvailable: any;
  static IsTransformPatternAvailable: any;
  static IsValuePatternAvailable: any;
  static IsWindowPatternAvailable: any;
  static ValueValue: any;
  static ValueIsReadOnly: any;
  static RangeValueValue: any;
  static RangeValueIsReadOnly: any;
  static RangeValueMinimum: any;
  static RangeValueMaximum: any;
  static RangeValueLargeChange: any;
  static RangeValueSmallChange: any;
  static ScrollHorizontalScrollPercent: any;
  static ScrollHorizontalViewSize: any;
  static ScrollVerticalScrollPercent: any;
  static ScrollVerticalViewSize: any;
  static ScrollHorizontallyScrollable: any;
  static ScrollVerticallyScrollable: any;
  static SelectionSelection: any;
  static SelectionCanSelectMultiple: any;
  static SelectionIsSelectionRequired: any;
  static GridRowCount: any;
  static GridColumnCount: any;
  static GridItemRow: any;
  static GridItemColumn: any;
  static GridItemRowSpan: any;
  static GridItemColumnSpan: any;
  static GridItemContainingGrid: any;
  static DockDockPosition: any;
  static ExpandCollapseExpandCollapseState: any;
  static MultipleViewCurrentView: any;
  static MultipleViewSupportedViews: any;
  static WindowCanMaximize: any;
  static WindowCanMinimize: any;
  static WindowWindowVisualState: any;
  static WindowWindowInteractionState: any;
  static WindowIsModal: any;
  static WindowIsTopmost: any;
  static SelectionItemIsSelected: any;
  static SelectionItemSelectionContainer: any;
  static TableRowHeaders: any;
  static TableColumnHeaders: any;
  static TableRowOrColumnMajor: any;
  static TableItemRowHeaderItems: any;
  static TableItemColumnHeaderItems: any;
  static ToggleToggleState: any;
  static TransformCanMove: any;
  static TransformCanResize: any;
  static TransformCanRotate: any;
  static IsLegacyIAccessiblePatternAvailable: any;
  static LegacyIAccessibleChildId: any;
  static LegacyIAccessibleName: any;
  static LegacyIAccessibleValue: any;
  static LegacyIAccessibleDescription: any;
  static LegacyIAccessibleRole: any;
  static LegacyIAccessibleState: any;
  static LegacyIAccessibleHelp: any;
  static LegacyIAccessibleKeyboardShortcut: any;
  static LegacyIAccessibleSelection: any;
  static LegacyIAccessibleDefaultAction: any;
  static AriaRole: any;
  static AriaProperties: any;
  static IsDataValidForForm: any;
  static ControllerFor: any;
  static DescribedBy: any;
  static FlowsTo: any;
  static ProviderDescription: any;
  static IsItemContainerPatternAvailable: any;
  static IsVirtualizedItemPatternAvailable: any;
  static IsSynchronizedInputPatternAvailable: any;
  static OptimizeForVisualContent: any;
  static IsObjectModelPatternAvailable: any;
  static AnnotationAnnotationTypeId: any;
  static AnnotationAnnotationTypeName: any;
  static AnnotationAuthor: any;
  static AnnotationDateTime: any;
  static AnnotationTarget: any;
  static IsAnnotationPatternAvailable: any;
  static IsTextPattern2Available: any;
  static StylesStyleId: any;
  static StylesStyleName: any;
  static StylesFillColor: any;
  static StylesFillPatternStyle: any;
  static StylesShape: any;
  static StylesFillPatternColor: any;
  static StylesExtendedProperties: any;
  static IsStylesPatternAvailable: any;
  static IsSpreadsheetPatternAvailable: any;
  static SpreadsheetItemFormula: any;
  static SpreadsheetItemAnnotationObjects: any;
  static SpreadsheetItemAnnotationTypes: any;
  static IsSpreadsheetItemPatternAvailable: any;
  static Transform2CanZoom: any;
  static IsTransformPattern2Available: any;
  static LiveSetting: any;
  static IsTextChildPatternAvailable: any;
  static IsDragPatternAvailable: any;
  static DragIsGrabbed: any;
  static DragDropEffect: any;
  static DragDropEffects: any;
  static IsDropTargetPatternAvailable: any;
  static DropTargetDropTargetEffect: any;
  static DropTargetDropTargetEffects: any;
  static DragGrabbedItems: any;
  static Transform2ZoomLevel: any;
  static Transform2ZoomMinimum: any;
  static Transform2ZoomMaximum: any;
  static FlowsFrom: any;
  static IsTextEditPatternAvailable: any;
  static IsPeripheral: any;
  static IsCustomNavigationPatternAvailable: any;
  static PositionInSet: any;
  static SizeOfSet: any;
  static Level: any;
  static AnnotationTypes: any;
  static AnnotationObjects: any;
  static LandmarkType: any;
  static LocalizedLandmarkType: any;
  static FullDescription: any;
  static FillColor: any;
  static OutlineColor: any;
  static FillType: any;
  static VisualEffects: any;
  static OutlineThickness: any;
  static CenterPoint: any;
  static Rotation: any;
  static Size: any;
  static IsSelectionPattern2Available: any;
  static Selection2FirstSelectedItem: any;
  static Selection2LastSelectedItem: any;
  static Selection2CurrentSelectedItem: any;
  static Selection2ItemCount: any;
  static HeadingLevel: any;
  static IsDialog: any;
}

export declare class IUIAutomation {
  getRootElement(): IUIAutomationElement;
  createPropertyCondition<Value>(propertyId: number, value: Value): PropertyCondition;
  rawViewWalker: IUIAutomationTreeWalker;
  controlViewWalker: IUIAutomationTreeWalker;
  contentViewWalker: IUIAutomationTreeWalker;
}
